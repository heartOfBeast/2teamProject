<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.cafe2team.dao.MemberMapper">

	<resultMap type="Member" id="memberResultMap">
		<result property="memberId"	 			column="member_id"/>
		<result property="memberPw"	 			column="member_pw"/>
		<result property="memberName"	 		column="member_name"/>
		<result property="memberLevelcode"		column="level_code"/>
		<result property="memberAddress"	 	column="member_address"/>
		<result property="memberEmail"	 		column="member_email"/>
		<result property="memberPhone"	 		column="member_phone"/>
		<result property="memberRegDate"	 	column="member_reg_date"/>
		<result property="memberAccountStatus"	column="member_account_status"/>
		<result property="memberIncentive"	 	column="member_incentive"/>

	<association property="memberLevel" javaType="MemberLevel">
			<result property="levelCode" 				column="level_code"/>
			<result property="levelName" 				column="level_name"/>
			<result property="levelRegDate" 			column="level_reg_date"/>
			<result property="levelUseState" 			column="level_use_status"/>
			<result property="memberId" 				column="member_id"/>
	</association>
	</resultMap>
	
	<resultMap type="AdminApproval" id="adminApprovalResultMap">
		<result property="adminApprovalId"	 				column="adminApproval_id"/>
		<result property="adminApprovalPw"	 				column="adminApproval_pw"/>
		<result property="adminApprovalName"	 			column="adminApproval_name"/>
		<result property="adminApprovalLevel"				column="level_code"/>
		<result property="adminApprovalAddress"	 			column="adminApproval_address"/>
		<result property="adminApprovalEmail"	 			column="adminApproval_email"/>
		<result property="adminApprovalPhone"	 			column="adminApproval_phone"/>
		<result property="adminApprovalRegDate"	 			column="adminApproval_reg_date"/>
		<result property="adminApprovalAccountState"		column="adminApproval_account_status"/>
		<result property="adminApprovalIncentive"	 		column="adminApproval_incentive"/>
	
		<association property="memberLevel" javaType="MemberLevel">
			<result property="levelCode" 				column="level_code"/>
			<result property="levelName" 				column="level_name"/>
			<result property="levelRegDate" 			column="level_reg_date"/>
			<result property="levelUseState" 			column="level_use_status"/>
			<result property="memberId" 				column="member_id"/>
		</association>
	</resultMap>
	
	<resultMap type="MemberLevel" id="memberLevel">
			<result property="levelCode" 				column="level_code"/>
			<result property="levelName" 				column="level_name"/>
			<result property="levelRegDate" 			column="level_reg_date"/>
			<result property="levelUseState" 			column="level_use_status"/>
			<result property="memberId" 				column="member_id"/>
	</resultMap>
	
	
	<select id="getMemberLevelCode" resultMap="memberLevel">
	SELECT 
		level_code, 
		level_name
	FROM 
		tb_member_level;
	</select>	
	
		
	<!-- 회원 전체 조회 -->	
	<select id="getMemberList" resultMap="memberResultMap">
		SELECT
			m.member_id
			,m.member_name
			,l.level_name
			,l.level_code
			,m.member_address
			,m.member_email
			,m.member_phone
			,m.member_reg_date
			,m.member_account_status
			,m.member_incentive
		FROM
			tb_member AS m
			INNER join
			tb_member_level AS l
			on
			m.level_code=l.level_code
		<choose>
			<when test="levelCode != null and levelCode != ''.toString() and firstDate == ''.toString()">
				WHERE l.level_code LIKE CONCAT('%', #{levelCode} ,'%')
			</when>
			<when test="firstDate != null and firstDate != ''.toString() and levelCode == ''.toString()">
				WHERE m.member_reg_date BETWEEN #{firstDate} AND #{secondDate}
			</when>
			<when test="levelCode != null and levelCode != ''.toString() and firstDate != null and firstDate != ''.toString()">
				WHERE l.level_code LIKE CONCAT('%', #{levelCode} ,'%') AND m.member_reg_date BETWEEN #{firstDate} AND #{secondDate}
			</when>
			<otherwise>
				;
			</otherwise>
		</choose>
	</select>
	
	<!-- 멤버로그인 // 아이디값 받아오기-->
	 <select id="getMemberById" parameterType="String" resultMap="memberResultMap">
	 SELECT 
		  member_id
		, member_pw
 		, member_name
		, level_code
		, member_address
		, member_email
		, member_phone
		, member_reg_date
		, member_account_status
		, member_incentive
	FROM
		tb_member
	WHERE 
		member_id=#{memberId};
	 </select>
	 
	 <!-- 관리대기 승인 아이디 불러오기 / 중복체크 -->
	 <select id="getApprovalById" parameterType="String" resultMap="adminApprovalResultMap">
	 	SELECT 
	 	adminApproval_id
	 	, adminApproval_pw
	 	, adminApproval_name
	 	, level_code
	 	, adminApproval_address
	 	, adminApproval_email
	 	, adminApproval_phone
	 	, adminApproval_reg_date
	 	, adminApproval_account_status
	 	, adminApproval_incentive
	FROM
		 tb_adminApproval
	WHERE
		adminApproval_id = #{adminApprovalId};
	 
	 </select>

	<select id="getShopById" parameterType="String" resultType="Shoppingmall">
		SELECT 
		  shoppingmall_user_id AS shoppingmallId
		, shoppingmall_user_pw AS shoppingmallPw
		, shoppingmall_user_name As shoppingmallUserName
		, shoppingmall_name AS shoppingmallName
		, shoppingmall_level_code AS shoppingmallLevel
		, shoppingmall_user_address AS shoppingmallAddr
		, shoppingmall_user_email AS shoppingmallEmail
		, shoppingmall_user_phone AS shoppingmallPhone
		, shoppingmall_user_iden_num AS shoppingmallNumber
		, shoppingmall_user_reg_date AS shoppingmallRegDay
		, shoppingmall_user_status AS shoppingmallStatus
		, shoppingmall_bank AS shoppingmallBank
		, shoppingmall_bank_number AS shoppingmallBankNum
		FROM 
			tb_shoppingmall_user
		WHERE 
			shoppingmall_user_id = #{shoppingmallId};
	
	</select>
	
	<select id="getShopAjaxId" parameterType="String" resultType="Shoppingmall">
	SELECT 
		shoppingmall_user_id AS shoppingmallId,
		shoppingmall_user_email AS shoppingmallEmail,
		shoppingmall_user_pw AS shoppingmallPw
	FROM 
		tb_shoppingmall_user
	WHERE
		shoppingmall_user_email = #{shoppingmallEmail};
		
	</select>
	
	<select id="getAdminAjaxId" parameterType="String" resultMap="memberResultMap">
	SELECT 
		member_id,
		member_Email,
		member_pw
	FROM 
		tb_member
	WHERE 
		member_email = #{memberEmail};
	</select>
	
<!-- 업데이트 -->
<update id ="updateMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" prefixOverrides=",">
		<if test="memberPw != null and memberPw != ''.toString()">			
			member_pw=#{memberPw}
		</if>
		<if test="memberLevelcode != null and memberLevelcode != ''.toString()">			
			,level_code=#{memberLevelcode}		
		</if>
		<if test="memberAddress != null and memberAddress != ''.toString()">			
			,member_address=#{memberAddress}
		</if>
		<if test="memberEmail != null and memberEmail != ''.toString()">			
			,member_email=#{memberEmail}
		</if>
		<if test="memberPhone != null and memberPhone != ''.toString()">			
			,member_phone=#{memberPhone}
		</if>
		<if test="memberAccountStatus != null and memberAccountStatus != ''.toString()">			
			,member_account_status=#{memberAccountStatus}
		</if>
		<if test="memberIncentive != null and memberIncentive != ''.toString()">			
			,member_incentive=#{memberIncentive}
		</if>
		WHERE
		 	member_id=#{memberId};
		 </trim>
</update>

<update id="adminApprovalStatusUpdate" parameterType="String">
	UPDATE 
		tb_adminApproval
	SET
		adminApproval_account_status='O'
	WHERE 
		adminApproval_id=#{adminApprovalId};
</update>

<update id="updateShopMember" parameterType="Shoppingmall">
UPDATE tb_shoppingmall_user
	<trim prefix="SET" prefixOverrides=",">
	<if test="shoppingmallPw != null and shoppingmallPw != ''.toString()">
		shoppingmall_user_pw=#{shoppingmallPw}
	</if>
	<if test="shoppingmallName != null and shoppingmallName != ''.toString()">
		shoppingmall_name=#{shoppingmallName},
	</if>
	<if test="shoppingmallAddr != null and shoppingmallAddr != ''.toString()">
		shoppingmall_user_address=#{shoppingmallAddr},
	</if>
	<if test="shoppingmallEmail != null and shoppingmallEmail != ''.toString()">
		shoppingmall_user_email=#{shoppingmallEmail},
	</if>
	<if test="shoppingmallPhone != null and shoppingmallPhone != ''.toString()">
		shoppingmall_user_phone=#{shoppingmallPhone},
	</if>
	<if test="shoppingmallNumber != null and shoppingmallNumber != ''.toString()">
		shoppingmall_user_iden_num=#{shoppingmallNumber},
	</if>
	<if test="shoppingmallBank != null and shoppingmallBank != ''.toString()">
	shoppingmall_bank=#{shoppingmallBank},
	</if>
	<if test="shoppingmallBankNum != null and shoppingmallBankNum != ''.toString()">
	shoppingmall_bank_number=#{shoppingmallBankNum},
	</if>
		shoppingmall_user_update=NOW()
	WHERE 
		shoppingmall_user_id=#{shoppingmallId};
	</trim>
</update>



<delete id="deleteMember" parameterType="String">
	DELETE 
	FROM 
		tb_member 
	WHERE 
		member_id=#{memberId};

</delete>

	 <resultMap type="WareAdmin" id="wareAdminResultMap">
		<result property="wareAdminId" 				column="ware_admin_id"/>
		<result property="wareAdminPw" 				column="ware_admin_pw"/>
		<result property="wareAdminName" 			column="ware_admin_name"/>
		<result property="wareAdminLevel" 			column="level_code"/>
		<result property="wareAdminAddress" 		column="ware_admin_address"/>
		<result property="wareAdminEmail" 			column="ware_admin_email"/>
		<result property="wareAdminPhone" 			column="ware_admin_phone"/>
		<result property="wareAdminRegDate" 		column="ware_admin_reg_date"/>
		<result property="wareAdminAccountState" 	column="ware_admin_account_status"/>
		<result property="wareAdminIncentive" 		column="ware_admin_incentive"/>
		
		<association property="memberLevel" javaType="MemberLevel">
			<result property="levelCode" 				column="level_code"/>
			<result property="levelName" 				column="level_name"/>
			<result property="levelRegDate" 			column="level_reg_date"/>
			<result property="levelUseState" 			column="level_use_status"/>
			<result property="memberId" 				column="member_id"/>
		</association>
	</resultMap>
	
	<select id="getAdminList" resultMap="wareAdminResultMap">
		SELECT
			 w.ware_admin_id
			,w.ware_admin_name
			,l.level_name
			,w.ware_admin_address
			,w.ware_admin_email
			,w.ware_admin_phone
			,w.ware_admin_reg_date
			,w.ware_admin_account_status
			,w.ware_admin_incentive
		FROM
			tb_ware_admin AS w
			INNER join
			tb_member_level AS l
			on
			w.level_code = l.level_code;
	</select>
	
	<insert id="adminIntotbMember" parameterType="String">
	INSERT INTO tb_member(		SELECT 
								*
								FROM
									tb_adminApproval
								WHERE
								 	adminApproval_Id = #{adminApprovalId});
	</insert>
	
	<insert id="adminIntotbAdminWare" parameterType="String">
	INSERT INTO tb_ware_admin(	SELECT 
								*
								FROM
									tb_adminApproval
								WHERE
								 	adminApproval_Id = #{adminApprovalId});
	</insert>
	
	<delete id="deleteWareAdmin" parameterType="String">
		DELETE
		FROM
		 tb_adminApproval
		WHERE adminApproval_Id=#{adminApprovalId};
	
	</delete>	
	
	<!-- 관리자 회원가입 insert -->
	<insert id="adminSignUp" parameterType="AdminApproval">
			INSERT INTO tb_adminApproval
		( 
		  adminApproval_id
		, adminApproval_pw
		, adminApproval_name
		, level_code
		, adminApproval_address
		, adminApproval_email
		, adminApproval_phone
		,adminApproval_account_status
		, adminApproval_reg_date
		) VALUES (
			#{adminApprovalId}
		, 	#{adminApprovalPw}
		, 	#{adminApprovalName}
		, 	#{adminApprovalLevel}
		, 	#{adminApprovalAddress}
		, 	#{adminApprovalEmail}
		, 	#{adminApprovalPhone}
		,   'X'
		, 	CURDATE());
		
	</insert>
	
	<!-- 관리 대기 승인 어드민 조회 -->
	<select id="getApprovalList" resultType="AdminApproval">
	SELECT
		a.adminApproval_id 				AS adminApprovalId
		,a.adminApproval_pw 			AS adminApprovalPw
		,l.level_name 					AS adminApprovalLevelName
		,a.adminApproval_name 			AS adminApprovalName
		,a.adminApproval_address 		AS adminApprovalAddress
		,a.adminApproval_email 			AS adminApprovalEmail
		,a.adminApproval_phone 			AS adminApprovalPhone
		,a.adminApproval_reg_date 		AS adminApprovalRegDate
		,a.adminApproval_account_status AS adminApprovalAccountState
		,a.adminApproval_incentive 		AS adminApprovalIncentive
	FROM
		tb_adminApproval AS a
		INNER join
		tb_member_level AS l
		ON
		a.level_code = l.level_code;
	
	</select>

	<!-- 거래처 등록 insert -->
	<insert id="memberShopInsert" parameterType="Shoppingmall">
		INSERT INTO tb_shoppingmall_user
			( 
			  shoppingmall_user_id
			, shoppingmall_user_pw
			, shoppingmall_name
			, shoppingmall_user_name
			, shoppingmall_level_code
			, shoppingmall_user_address
			, shoppingmall_user_email
			, shoppingmall_user_phone
			, shoppingmall_user_reg_date
		)VALUES(
			  #{shoppingmallId}
			, #{shoppingmallPw}
			, #{shoppingmallName}
			, #{shoppingmallUserName}
			, '6'
			, #{shoppingmallAddr}
			, #{shoppingmallEmail}
			, #{shoppingmallPhone}
			, CURDATE());
	</insert>
	 
	 <!-- 쇼핑몰 회원 조회 -->
	<select id="getShoppingmallList" resultType="Shoppingmall">
	SELECT 
		  shU.shoppingmall_user_id						AS shoppingmallId
		, shU.shoppingmall_user_pw						AS shoppingmallPw
		, shU.shoppingmall_user_name					AS shoppingmallUserName
		, shU.shoppingmall_name							AS shoppingmallName
		, shL.level_name  							    AS shoppingmallLevelName
		, shU.shoppingmall_user_address					AS shoppingmallAddr
		, shU.shoppingmall_user_email					AS shoppingmallEmail
		, shU.shoppingmall_user_phone					AS shoppingmallPhone
		, shU.shoppingmall_user_iden_num				AS shoppingmallNumber
		, shU.shoppingmall_user_reg_date				AS shoppingmallRegDay
		, shU.shoppingmall_user_status					AS shoppingmallStatus
		, shU.shoppingmall_bank							AS shoppingmallBank
		, shU.shoppingmall_bank_number					AS shoppingmallBankNum
	FROM 
		tb_shoppingmall_user AS shU
		JOIN
		tb_member_level AS shL
		ON
		shU.shoppingmall_level_code = shL.level_code;
	</select>
		
<!-- 	<select id="getMemberListDetail" resultMap="memberResultMap" parameterType="String"> -->
<!-- 	SELECT  -->
<!-- 		m.member_id -->
<!-- 		, m.member_pw -->
<!-- 		, m.member_name -->
<!-- 		, l.level_name -->
<!-- 		, m.member_address -->
<!-- 		, m.member_email -->
<!-- 		, m.member_phone -->
<!-- 		, m.member_reg_date -->
<!-- 		, m.member_account_status -->
<!-- 		, m.member_incentive -->
<!-- 	FROM  -->
<!-- 		tb_member AS m -->
<!-- 		INNER join -->
<!-- 		tb_member_level AS l -->
<!-- 		on -->
<!-- 		m.level_code = l.level_code -->
<!-- 	WHERE -->
<!-- 		<if	test="level_name !=null and level_name != ''" > -->
<!-- 			l.level_name =	#{levelName}; -->
<!-- 		</if> -->
		
<!-- 	</select> -->
	
	<delete id="shopMemberDelete" parameterType="String">
	DELETE 
	FROM 
		tb_shoppingmall_user 
	WHERE 
		shoppingmall_user_pw=#{shoppingmallPw};
	
	</delete>
	
	<delete id="cancleAdminWating" parameterType="java.util.List">
	DELETE 
	FROM 
		tb_adminApproval 
	WHERE 
		adminApproval_id in
	<foreach collection="list" item="deleteCode" open="(" close=")" separator=",">
		#{deleteCode}
	</foreach>
	</delete>

</mapper>